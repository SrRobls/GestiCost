<br>
<br>
<button onclick="openModal();" class="cssbuttons-io">
  <span>
    Crear Transacción
  </span>
</button>
<br>
<br>

<div class="modal" id="modal">
  <div class="modal-background"></div>
  <div class="modal-content">
    <div class="section crear-trans">
      <form method="POST" id="crear-transaccion-form">
        <div class="columns is-multiline">
          <div class="column is-half">
            <div class="field">
              <label class="label" for="nombre-trans">Nombre de Transacción</label>
              <div class="control">
                <input class="input" type="text" placeholder="Nombre" id="nombre-trans" name="nombre" />
              </div>
            </div>
          </div>

          <div class="column is-half">
            <div class="field">
              <label class="label" for="costo-trans">Costo</label>
              <div class="control">
                <input class="input" type="text" placeholder="Costo" id="costo-trans" name="costo" />
              </div>
            </div>
          </div>

          <div class="column is-half">
            <div class="field">
              <label class="label" for="metodo-pago">Método de Pago</label>
              <div class="control">
                <div class="select is-fullwidth">
                  <select id="metodo-pago" name="metodo_pago">
                    <option value="credito">Crédito</option>
                    <option value="debito">Débito</option>
                    <option value="efectivo">Efectivo</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          <div class="column is-half">
            <div class="field">
              <label class="label" for="categoria-trans">Categoría</label>
              <div class="control">
                <div class="select is-fullwidth">
                  <select id="categoria-trans" name="categoria">
                    <option value="comida">Comida</option>
                    <option value="transporte">Transporte</option>
                    <option value="entretenimiento">Entretenimiento</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          <div class="column is-full">
            <div class="field">
              <label class="label" for="descripcion-trans">Descripción</label>
              <div class="control">
                <textarea class="textarea" placeholder="Descripción" id="descripcion-trans"
                  name="descripcion"></textarea>
              </div>
            </div>
          </div>
        </div>

        <div class="field is-grouped">
          <div class="control">
            <button class="button is-link" type="submit">Enviar</button>
          </div>
          <div class="control">
            <button onclick="closeModal()" class="button is-light" type="button">Cancelar</button>
          </div>
        </div>
      </form>
    </div>
  </div>
  {{!-- <button class="modal-close is-large" aria-label="close"></button> --}}
</div>

<div id="transacciones" class="transacciones">
  {{!-- Para pintar las transacciones hacemos ls siguiente:
  - en hbs el codigo js se escribe dentro de {{codigo}}, entoncesdecimos qe si hay transacciones (que la mandamos como
  response en la peticion), entonces haga una tabla de estas
  - luego por cada una de las transacciones que se obtiene se usa el each para que las pinte, notemos que como desde la
  peticiones lo mandamos como datos del response podemos aceder
  a las carecteriticas de cada una mediante {{caracteristica}}
  - dato important mediante {{@key accedemos al id de la transaccion dentro de la base de datos de firebase. Noten que
  lo usamos para obtener su identificacion para eliminar o editar}}
  . Mirar la funcion donde se dibuja--}}
</div>

<div class="modal" id="modal-edit">
  <div class="modal-background"></div>
  <div class="modal-content">
    <div class="section crear-trans">
      <form id="form-edit" method="POST">
        <div class="columns is-multiline">
          <div class="column is-half">
            <div class="field">
              <label class="label" for="nombre-trans">Nombre</label>
              <div class="control">
                <input class="input" type="text" placeholder="Nombre" id="nombre-trans-edit" name="nombre" />
              </div>
            </div>
          </div>

          <div class="column is-half">
            <div class="field">
              <label class="label" for="costo-trans">Costo</label>
              <div class="control">
                <input class="input" type="text" placeholder="Costo" id="costo-trans-edit" name="costo" />
              </div>
            </div>
          </div>

          <div class="column is-half">
            <div class="field">
              <label class="label" for="metodo-pago">Método de Pago</label>
              <div class="control">
                <div class="select is-fullwidth">
                  <select id="metodo-pago-edit" name="metodo_pago">
                    <option value="credito">Crédito</option>
                    <option value="debito">Débito</option>
                    <option value="efectivo">Efectivo</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          <div class="column is-half">
            <div class="field">
              <label class="label" for="categoria-trans">Categoría</label>
              <div class="control">
                <div class="select is-fullwidth">
                  <select id="categoria-trans-edit" name="categoria">
                    <option value="comida">Comida</option>
                    <option value="transporte">Transporte</option>
                    <option value="entretenimiento">Entretenimiento</option>
                  </select>
                </div>
              </div>
            </div>
          </div>

          <div class="column is-full">
            <div class="field">
              <label class="label" for="descripcion-trans">Descripción</label>
              <div class="control">
                <textarea class="textarea" placeholder="Descripción" id="descripcion-trans-edit"
                  name="descripcion"></textarea>
              </div>
            </div>
          </div>
        </div>

        <div class="field is-grouped">
          <div class="control">
            <button class="button is-link" type="submit">Editar</button>
          </div>
          <div class="control">
            <button onclick="closeModalEdit()" class="button is-light" type="button">Cancelar</button>
          </div>
        </div>
      </form>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', async () => {
    const idToken = await localStorage.getItem('idToken');
    if (idToken) {
      try {
        const response = await fetch('/api/transacciones', {
          method: 'GET',
          headers: {
            'Authorization': `Bearer ${idToken}`
          }
        });
        const data = await response.json();

        const transaccionesDiv = document.getElementById('transacciones');

        // Aquí construimos el HTML para la tabla
        if (data && Object.keys(data).length > 0) {
          let tableHTML = `
            <table class="table is-fullwidth">
              <thead>
                <tr>
                  <th>Nombre</th>
                  <th>Costo</th>
                  <th>Método de Pago</th>
                  <th>Categoría</th>
                  <th>Descripción</th>
                  <th>Acción</th>
                </tr>
              </thead>
              <tbody>
          `;

          for (const [key, transaccion] of Object.entries(data)) {
            tableHTML += `
              <tr>
                <td>${transaccion.nombre}</td>
                <td>${transaccion.costo}</td>
                <td>${transaccion.metodo}</td>
                <td>${transaccion.categoria}</td>
                <td>${transaccion.descripcion}</td>
                <td>
                  <a href="/eliminar-transaccion/${key}"><button class="button is-danger">Eliminar</button></a>
                  <button
                    onclick="openModalEdit('${key}', '${transaccion.nombre}', '${transaccion.costo}', '${transaccion.metodo}', '${transaccion.categoria}', '${transaccion.descripcion}');"
                    class="button is-primary">Editar</button>
                </td>
              </tr>
            `;
          }

          tableHTML += `
              </tbody>
            </table>
          `;

          transaccionesDiv.innerHTML = tableHTML;
        } else {
          transaccionesDiv.innerHTML = '<p>No hay transacciones ¡Crea una!</p>';
        }
      } catch (error) {
        console.error('Error al obtener las transacciones:', error);
      }
    } else {
      console.error('No se encontró el token de ID');
    }
  });
</script>


<script>
  document.getElementById('crear-transaccion-form').addEventListener('submit', async (event) => {
    event.preventDefault();
    const form = event.target;

    const transaccion = {
      nombre: form.nombre.value,
      costo: form.costo.value,
      metodo_pago: form.metodo_pago.value,
      categoria: form.categoria.value,
      descripcion: form.descripcion.value
    };
    console.log(transaccion);

    const idToken = localStorage.getItem('idToken');

    if (!idToken) {
      console.error('No se encontró el token de ID');
      return;
    }

    try {
      const response = await fetch('/crear-transaccion', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${idToken}`
        },
        body: JSON.stringify(transaccion)
      });

      if (response.ok) {
        window.location.href = '/transacciones';
      } else {
        console.error('Error al crear la transacción:', response.statusText);
      }
    } catch (error) {
      console.error('Error al crear la transacción:', error);
    }
  });
</script>